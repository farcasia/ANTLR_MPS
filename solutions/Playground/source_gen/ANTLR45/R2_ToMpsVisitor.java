package ANTLR45;

/*Generated by MPS */

import org.campagnelab.antlr.r.complete.R2BaseVisitor;
import org.jetbrains.mps.openapi.model.SNode;
import org.antlr.v4.runtime.tree.ParseTreeVisitor;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import java.util.List;
import org.antlr.v4.runtime.RuleContext;
import java.util.ArrayList;
import java.util.Iterator;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.antlr.v4.runtime.tree.ParseTree;
import org.jetbrains.annotations.NotNull;
import org.campagnelab.antlr.r.complete.R2Parser.ProgramContext;
import jetbrains.mps.baseLanguage.logging.runtime.model.LoggingRuntime;
import org.apache.log4j.Level;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.campagnelab.antlr.r.complete.R2Parser.ElementAccessContext;
import org.campagnelab.antlr.r.complete.R2Parser.ListAccessContext;
import org.campagnelab.antlr.r.complete.R2Parser.ColonsContext;
import org.campagnelab.antlr.r.complete.R2Parser.DollarContext;
import org.campagnelab.antlr.r.complete.R2Parser.CaretContext;
import org.campagnelab.antlr.r.complete.R2Parser.UnaryOperatorContext;
import org.campagnelab.antlr.r.complete.R2Parser.ColonContext;
import org.campagnelab.antlr.r.complete.R2Parser.USER_OPContext;
import org.campagnelab.antlr.r.complete.R2Parser.MultiplicationContext;
import org.campagnelab.antlr.r.complete.R2Parser.AdditionContext;
import org.campagnelab.antlr.r.complete.R2Parser.ComparisonContext;
import org.campagnelab.antlr.r.complete.R2Parser.NotContext;
import org.campagnelab.antlr.r.complete.R2Parser.AndContext;
import org.campagnelab.antlr.r.complete.R2Parser.OrContext;
import org.campagnelab.antlr.r.complete.R2Parser.UnaryTildeContext;
import org.campagnelab.antlr.r.complete.R2Parser.TildeContext;
import org.campagnelab.antlr.r.complete.R2Parser.AssignmentOperatorContext;
import org.campagnelab.antlr.r.complete.R2Parser.FunctionContext;
import org.campagnelab.antlr.r.complete.R2Parser.FunctionCallContext;
import org.campagnelab.antlr.r.complete.R2Parser.BodyContext;
import org.campagnelab.antlr.r.complete.R2Parser.IfContext;
import org.campagnelab.antlr.r.complete.R2Parser.IfElseContext;
import org.campagnelab.antlr.r.complete.R2Parser.ForContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.campagnelab.antlr.r.complete.R2Parser.WhileContext;
import org.campagnelab.antlr.r.complete.R2Parser.RepeatContext;
import org.campagnelab.antlr.r.complete.R2Parser.HelpContext;
import org.campagnelab.antlr.r.complete.R2Parser.NextContext;
import org.campagnelab.antlr.r.complete.R2Parser.BreakContext;
import org.campagnelab.antlr.r.complete.R2Parser.ParenthesizedContext;
import org.campagnelab.antlr.r.complete.R2Parser.IDContext;
import org.campagnelab.antlr.r.complete.R2Parser.StringLiteralContext;
import org.campagnelab.antlr.r.complete.R2Parser.HexLiteralContext;
import org.campagnelab.antlr.r.complete.R2Parser.IntLiteralContext;
import org.campagnelab.antlr.r.complete.R2Parser.FloatLiteralContext;
import org.campagnelab.antlr.r.complete.R2Parser.ComplexLiteralContext;
import org.campagnelab.antlr.r.complete.R2Parser.NullContext;
import org.campagnelab.antlr.r.complete.R2Parser.NAContext;
import org.campagnelab.antlr.r.complete.R2Parser.InfContext;
import org.campagnelab.antlr.r.complete.R2Parser.NaNContext;
import org.campagnelab.antlr.r.complete.R2Parser.TrueLiteralContext;
import org.campagnelab.antlr.r.complete.R2Parser.FalseLiteralContext;
import org.campagnelab.antlr.r.complete.R2Parser.ExprList2Context;
import org.campagnelab.antlr.r.complete.R2Parser.EmptyContext;
import org.campagnelab.antlr.r.complete.R2Parser.FunctionParamDeclarationListContext;
import org.campagnelab.antlr.r.complete.R2Parser.IdParameterDeclarationContext;
import org.campagnelab.antlr.r.complete.R2Parser.ParameterWithDefaultDeclarationContext;
import org.campagnelab.antlr.r.complete.R2Parser.VarargsParamContext;
import org.campagnelab.antlr.r.complete.R2Parser.ParametersContext;
import org.campagnelab.antlr.r.complete.R2Parser.ParameterValueListContext;
import org.campagnelab.antlr.r.complete.R2Parser.IndexedValueContext;
import org.campagnelab.antlr.r.complete.R2Parser.IdValueContext;
import org.campagnelab.antlr.r.complete.R2Parser.StringValueContext;
import org.campagnelab.antlr.r.complete.R2Parser.NullValueContext;
import org.campagnelab.antlr.r.complete.R2Parser.VarargsValueContext;
import org.campagnelab.antlr.r.complete.R2Parser.EmptyValueContext;
import org.campagnelab.antlr.r.complete.R2Parser.SubExprContext;
import org.campagnelab.antlr.r.complete.R2Parser.IdSubDefaultContext;
import org.campagnelab.antlr.r.complete.R2Parser.IdExprSubContext;
import org.campagnelab.antlr.r.complete.R2Parser.StringDefaultContext;
import org.campagnelab.antlr.r.complete.R2Parser.StringExprContext;
import org.campagnelab.antlr.r.complete.R2Parser.NullDefaultSubContext;
import org.campagnelab.antlr.r.complete.R2Parser.NullExprSubContext;
import org.campagnelab.antlr.r.complete.R2Parser.VarargsContext;
import org.campagnelab.antlr.r.complete.R2Parser.EmptySubContext;
import java.util.Arrays;

public class R2_ToMpsVisitor extends R2BaseVisitor<SNode> implements ParseTreeVisitor<SNode> {
  private static final Logger LOG = LogManager.getLogger(R2_ToMpsVisitor.class);
  public R2_ToMpsVisitor() {
    super();
  }
  public List<SNode> visitList(List<? extends RuleContext> contextList) {
    List<SNode> result = new ArrayList<SNode>();
    Iterator it = contextList.iterator();
    while (it.hasNext()) {
      ListSequence.fromList(result).addElement((SNode) visit(((ParseTree) it.next())));
    }
    return result;
  }
  public Object convert(Object o, boolean toString) {
    if (toString && o instanceof RuleContext) {
      return ((RuleContext) o).getText();
    }
    return o;
  }
  public List convertList(List<Object> oList, boolean toString) {
    List r = new ArrayList();
    for (Object o : oList) {
      r.add(((RuleContext) oList).getText());
    }
    return r;
  }

  public SNode visitProgram(@NotNull ProgramContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Program" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04afaceL, "org.campagnelab.metar.R.structure.RScript"));
    // fill-in children: 
    ListSequence.fromList((SLinkOperations.getChildren(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04afacdL, 0x11106e6008ed55a2L, "expressions")))).addSequence(ListSequence.fromList(((context.???() != null ? visitList(context.???()) : null))));

    return result;
  }
  public SNode visitElementAccess(@NotNull ElementAccessContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "ElementAccess" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529aL, "org.campagnelab.metar.R.structure.ElementAccessExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529aL, 0x195a5f84d6043296L, "expression"), ((context.???() != null ? visit(context.???()) : null)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529aL, 0x195a5f84d6043298L, "indexSelection"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitListAccess(@NotNull ListAccessContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "ListAccess" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529bL, "org.campagnelab.metar.R.structure.ListAccessExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529bL, 0x195a5f84d6043421L, "expression"), ((context.???() != null ? visit(context.???()) : null)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529bL, 0x195a5f84d6043423L, "indexSelection"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitColons(@NotNull ColonsContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Colons" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529cL, "org.campagnelab.metar.R.structure.ColonsExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x6c9855e848f60fcL, "operator"), R2_ToMpsVisitor.mapOperator(context.???.getText(), 2));;

    return result;
  }
  public SNode visitDollar(@NotNull DollarContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Dollar" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529dL, "org.campagnelab.metar.R.structure.DollarExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x6c9855e848f60fcL, "operator"), R2_ToMpsVisitor.mapOperator(context.???.getText(), 2));;

    return result;
  }
  public SNode visitCaret(@NotNull CaretContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Caret" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529eL, "org.campagnelab.metar.R.structure.ExponentExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;

    return result;
  }
  public SNode visitUnaryOperator(@NotNull UnaryOperatorContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "UnaryOperator" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529fL, "org.campagnelab.metar.R.structure.UnaryOperatorExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529fL, 0x6c9855e84baca07L, "operator"), R2_ToMpsVisitor.mapOperator(context.???.getText(), 1));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529fL, 0x6c9855e84baca0aL, "expression"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitColon(@NotNull ColonContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Colon" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4c36c37b4268e482L, "org.campagnelab.metar.R.structure.ColonExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;

    return result;
  }
  public SNode visitUSER_OP(@NotNull USER_OPContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "USER_OP" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52a1L, "org.campagnelab.metar.R.structure.USER_OPExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x6c9855e848f60fcL, "operator"), R2_ToMpsVisitor.mapOperator(context.???().getText(), 2));;

    return result;
  }
  public SNode visitMultiplication(@NotNull MultiplicationContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Multiplication" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52a2L, "org.campagnelab.metar.R.structure.MultiplicationExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x6c9855e848f60fcL, "operator"), R2_ToMpsVisitor.mapOperator(context.???.getText(), 2));;

    return result;
  }
  public SNode visitAddition(@NotNull AdditionContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Addition" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52a3L, "org.campagnelab.metar.R.structure.AdditionExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x6c9855e848f60fcL, "operator"), R2_ToMpsVisitor.mapOperator(context.???.getText(), 2));;

    return result;
  }
  public SNode visitComparison(@NotNull ComparisonContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Comparison" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52a4L, "org.campagnelab.metar.R.structure.ComparisonExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x6c9855e848f60fcL, "operator"), R2_ToMpsVisitor.mapOperator(context.???.getText(), 2));;

    return result;
  }
  public SNode visitNot(@NotNull NotContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Not" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52a5L, "org.campagnelab.metar.R.structure.NotExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b529fL, 0x6c9855e84baca0aL, "expression"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitAnd(@NotNull AndContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "And" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52a6L, "org.campagnelab.metar.R.structure.AndExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x6c9855e848f60fcL, "operator"), R2_ToMpsVisitor.mapOperator(context.???.getText(), 2));;

    return result;
  }
  public SNode visitOr(@NotNull OrContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Or" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52a7L, "org.campagnelab.metar.R.structure.OrExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x6c9855e848f60fcL, "operator"), R2_ToMpsVisitor.mapOperator(context.???.getText(), 2));;

    return result;
  }
  public SNode visitUnaryTilde(@NotNull UnaryTildeContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "UnaryTilde" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52a8L, "org.campagnelab.metar.R.structure.UnaryTildeExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52a8L, 0x195a5f84d60c46c5L, "expression"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitTilde(@NotNull TildeContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Tilde" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52a9L, "org.campagnelab.metar.R.structure.TildeExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;

    return result;
  }
  public SNode visitAssignmentOperator(@NotNull AssignmentOperatorContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "AssignmentOperator" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52aaL, "org.campagnelab.metar.R.structure.AssignmentOperatorExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4346L, "left"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x56b22566c9bf4348L, "right"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x56b22566c9bf4345L, 0x6c9855e848f60fcL, "operator"), R2_ToMpsVisitor.mapOperator(context.???.getText(), 2));;

    return result;
  }
  public SNode visitFunction(@NotNull FunctionContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "function" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52abL, "org.campagnelab.metar.R.structure.FunctionDeclarationExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52abL, 0x14d0385865ace7f8L, "parameters"), ((context.???() != null ? visit(context.???()) : null)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52abL, 0x14d0385865ace7f6L, "body"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitFunctionCall(@NotNull FunctionCallContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "functionCall" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52acL, "org.campagnelab.metar.R.structure.FunctionCallExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52acL, 0x33dd14ec70cfd7b4L, "id"), ((context.???() != null ? visit(context.???()) : null)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52acL, 0x33dd14ec70cfd7b2L, "parameters"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitBody(@NotNull BodyContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "body" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52adL, "org.campagnelab.metar.R.structure.BodyExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52adL, 0x33dd14ec70a4e469L, "list"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitIf(@NotNull IfContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "if" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52aeL, "org.campagnelab.metar.R.structure.IfExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52aeL, 0x11106e6009c45cfbL, "condition"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52aeL, 0x11106e6009c45d34L, "body"), (SNode) visit((context.???)));;

    return result;
  }
  public SNode visitIfElse(@NotNull IfElseContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "ifElse" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52afL, "org.campagnelab.metar.R.structure.IfElseExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52afL, 0x19aaf0c78fc54e47L, "body"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52afL, 0x19aaf0c78fc54e46L, "condition"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52afL, 0x19aaf0c78fc54e91L, "else"), (SNode) visit((context.???)));;

    return result;
  }
  public SNode visitFor(@NotNull ForContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "for" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b0L, "org.campagnelab.metar.R.structure.ForExpr"));
    // fill-in children: 
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b0L, 0x33dd14ec70c48cc3L, "id"), "" + (context.???().getText()));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b0L, 0x33dd14ec70c2d7bdL, "list"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b0L, 0x33dd14ec70c2d7adL, "body"), (SNode) visit((context.???)));;

    return result;
  }
  public SNode visitWhile(@NotNull WhileContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "while" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b1L, "org.campagnelab.metar.R.structure.WhileExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b1L, 0x3ec2bbae1c0147e4L, "condition"), (SNode) visit((context.???)));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b1L, 0x3ec2bbae1c0147e6L, "body"), (SNode) visit((context.???)));;

    return result;
  }
  public SNode visitRepeat(@NotNull RepeatContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "repeat" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b2L, "org.campagnelab.metar.R.structure.RepeatExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b2L, 0x195a5f84d5efc0c6L, "body"), (SNode) visit((context.???)));;

    return result;
  }
  public SNode visitHelp(@NotNull HelpContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "help" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b3L, "org.campagnelab.metar.R.structure.HelpExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b3L, 0x195a5f84d60c4df7L, "expression"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitNext(@NotNull NextContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "next" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b4L, "org.campagnelab.metar.R.structure.NextExpr"));
    // fill-in children: 

    return result;
  }
  public SNode visitBreak(@NotNull BreakContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "break" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b5L, "org.campagnelab.metar.R.structure.BreakExpr"));
    // fill-in children: 

    return result;
  }
  public SNode visitParenthesized(@NotNull ParenthesizedContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "parenthesized" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b6L, "org.campagnelab.metar.R.structure.ParenthesizedExpr"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b6L, 0x195a5f84d60c4e03L, "expression"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitID(@NotNull IDContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "ID" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b7L, "org.campagnelab.metar.R.structure.Identifier"));
    // fill-in children: 
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "" + (context.???().getText()));;

    return result;
  }
  public SNode visitStringLiteral(@NotNull StringLiteralContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "stringLiteral" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b8L, "org.campagnelab.metar.R.structure.StringLiteralExpr"));
    // fill-in children: 
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b8L, 0x11106e60089e754eL, "value"), R2_ToMpsVisitor.trim(context.???().getText(), new String[]{"\"", "'", "`"}));;

    return result;
  }
  public SNode visitHexLiteral(@NotNull HexLiteralContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "hexLiteral" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b9L, "org.campagnelab.metar.R.structure.HexLiteralExpr"));
    // fill-in children: 
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52b9L, 0x11106e60089e7552L, "value"), "" + (context.???().getText()));;

    return result;
  }
  public SNode visitIntLiteral(@NotNull IntLiteralContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "intLiteral" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52baL, "org.campagnelab.metar.R.structure.IntLiteralExpr"));
    // fill-in children: 
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52baL, 0x11106e60089e7566L, "value"), "" + (context.???().getText()));;

    return result;
  }
  public SNode visitFloatLiteral(@NotNull FloatLiteralContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "floatLiteral" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52bbL, "org.campagnelab.metar.R.structure.FloatLiteralExpr"));
    // fill-in children: 
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52bbL, 0x11106e60089e7685L, "value"), "" + (context.???().getText()));;

    return result;
  }
  public SNode visitComplexLiteral(@NotNull ComplexLiteralContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "complexLiteral" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52bcL, "org.campagnelab.metar.R.structure.ComplexLiteralExpr"));
    // fill-in children: 
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52bcL, 0x422188d90f4e71baL, "value"), "" + (context.???().getText()));;

    return result;
  }
  public SNode visitNull(@NotNull NullContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Null" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52bdL, "org.campagnelab.metar.R.structure.NullExpr"));
    // fill-in children: 

    return result;
  }
  public SNode visitNA(@NotNull NAContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "NA" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52beL, "org.campagnelab.metar.R.structure.NAExpr"));
    // fill-in children: 

    return result;
  }
  public SNode visitInf(@NotNull InfContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Inf" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52bfL, "org.campagnelab.metar.R.structure.InfExpr"));
    // fill-in children: 

    return result;
  }
  public SNode visitNaN(@NotNull NaNContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "NaN" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52c0L, "org.campagnelab.metar.R.structure.NaNExpr"));
    // fill-in children: 

    return result;
  }
  public SNode visitTrueLiteral(@NotNull TrueLiteralContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "trueLiteral" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52c1L, "org.campagnelab.metar.R.structure.TrueLiteralExpr"));
    // fill-in children: 

    return result;
  }
  public SNode visitFalseLiteral(@NotNull FalseLiteralContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "falseLiteral" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x55b5a4eee04b52c2L, "org.campagnelab.metar.R.structure.FalseLiteralExpr"));
    // fill-in children: 

    return result;
  }
  public SNode visitExprList2(@NotNull ExprList2Context context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "exprList2" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x33dd14ec70a501d6L, "org.campagnelab.metar.R.structure.Exprlist"));
    // fill-in children: 
    ListSequence.fromList((SLinkOperations.getChildren(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x33dd14ec70a501d6L, 0x33dd14ec70a501d7L, "expressions")))).addSequence(ListSequence.fromList(((context.???() != null ? visitList(context.???()) : null))));

    return result;
  }
  public SNode visitEmpty(@NotNull EmptyContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "empty" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x5b7927c25044173L, "org.campagnelab.metar.R.structure.EmptyExprlist"));
    // fill-in children: 

    return result;
  }
  public SNode visitFunctionParamDeclarationList(@NotNull FunctionParamDeclarationListContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "functionParamDeclarationList" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4298e25fd0bcfc9fL, "org.campagnelab.metar.R.structure.FunctionParamDeclarationList"));
    // fill-in children: 
    ListSequence.fromList((SLinkOperations.getChildren(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4298e25fd0bcfc9fL, 0x4298e25fd0bce2d3L, "params")))).addSequence(ListSequence.fromList(((List<SNode>) visitList(context.???))));

    return result;
  }
  public SNode visitIdParameterDeclaration(@NotNull IdParameterDeclarationContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "IdParameterDeclaration" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e94L, "jetbrains.mps.baseLanguage.structure.ParameterDeclaration"));
    // fill-in children: 
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "" + (context.???().getText()));;

    return result;
  }
  public SNode visitParameterWithDefaultDeclaration(@NotNull ParameterWithDefaultDeclarationContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "ParameterWithDefaultDeclaration" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e94L, "jetbrains.mps.baseLanguage.structure.ParameterDeclaration"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4298e25fd0bcfc9eL, 0x4298e25fd0bcfca3L, "defaultValue"), ((context.???() != null ? visit(context.???()) : null)));;
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "" + (context.???().getText()));;

    return result;
  }
  public SNode visitVarargsParam(@NotNull VarargsParamContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "VarargsParam" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4298e25fd0bcfca2L, "org.campagnelab.metar.R.structure.VarargsParameter"));
    // fill-in children: 

    return result;
  }
  public SNode visitParameters(@NotNull ParametersContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "parameters" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x33dd14ec70cfd7cbL, "org.campagnelab.metar.R.structure.Sublist"));
    // fill-in children: 
    ListSequence.fromList((SLinkOperations.getChildren(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x33dd14ec70cfd7cbL, 0x33dd14ec70d0dce1L, "expressions")))).addSequence(ListSequence.fromList(((context.???() != null ? visitList(context.???()) : null))));

    return result;
  }
  public SNode visitParameterValueList(@NotNull ParameterValueListContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "parameterValueList" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40d9342fL, "org.campagnelab.metar.R.structure.ParameterValues"));
    // fill-in children: 
    ListSequence.fromList((SLinkOperations.getChildren(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40d9342fL, 0x501583ef40d93539L, "values")))).addSequence(ListSequence.fromList(((context.???() != null ? visitList(context.???()) : null))));

    return result;
  }
  public SNode visitIndexedValue(@NotNull IndexedValueContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "IndexedValue" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x44763ca97f6dfe13L, "org.campagnelab.metar.R.structure.PositionalParameterValue"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40d93683L, 0x501583ef40d93794L, "value"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitIdValue(@NotNull IdValueContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "IdValue" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x44763ca97f6dfe14L, "org.campagnelab.metar.R.structure.ParameterValueWithId"));
    // fill-in children: 
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40d93683L, 0x501583ef40d93792L, "id"), "" + (context.???().getText()));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40d93683L, 0x501583ef40d93794L, "value"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitStringValue(@NotNull StringValueContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "StringValue" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x44763ca97f6dfe15L, "org.campagnelab.metar.R.structure.StringValueValue"));
    // fill-in children: 
    
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40d93683L, 0x501583ef40d93792L, "id"), R2_ToMpsVisitor.trim(context.???().getText(), new String[]{"\"", "'", "`"}));;
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40d93683L, 0x501583ef40d93794L, "value"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitNullValue(@NotNull NullValueContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "NullValue" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x44763ca97f6dfe16L, "org.campagnelab.metar.R.structure.NullValueValue"));
    // fill-in children: 
    
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40d93683L, 0x501583ef40d93794L, "value"), ((context.???() != null ? visit(context.???()) : null)));;

    return result;
  }
  public SNode visitVarargsValue(@NotNull VarargsValueContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "VarargsValue" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x44763ca97f6dfe17L, "org.campagnelab.metar.R.structure.VarargsParameterValue"));
    // fill-in children: 

    return result;
  }
  public SNode visitEmptyValue(@NotNull EmptyValueContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "EmptyValue" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x44763ca97f6dfe13L, "org.campagnelab.metar.R.structure.PositionalParameterValue"));
    // fill-in children: 

    return result;
  }
  public SNode visitSubExpr(@NotNull SubExprContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "SubExpr" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40c24ff4L, "org.campagnelab.metar.R.structure.Sub"));
    // fill-in children: 

    return result;
  }
  public SNode visitIdSubDefault(@NotNull IdSubDefaultContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "IdSubDefault" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40c24ff4L, "org.campagnelab.metar.R.structure.Sub"));
    // fill-in children: 

    return result;
  }
  public SNode visitIdExprSub(@NotNull IdExprSubContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "IdExprSub" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40c24ff4L, "org.campagnelab.metar.R.structure.Sub"));
    // fill-in children: 

    return result;
  }
  public SNode visitStringDefault(@NotNull StringDefaultContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "StringDefault" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40c24ff4L, "org.campagnelab.metar.R.structure.Sub"));
    // fill-in children: 

    return result;
  }
  public SNode visitStringExpr(@NotNull StringExprContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "StringExpr" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40c24ff4L, "org.campagnelab.metar.R.structure.Sub"));
    // fill-in children: 

    return result;
  }
  public SNode visitNullDefaultSub(@NotNull NullDefaultSubContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "NullDefaultSub" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40c24ff4L, "org.campagnelab.metar.R.structure.Sub"));
    // fill-in children: 

    return result;
  }
  public SNode visitNullExprSub(@NotNull NullExprSubContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "NullExprSub" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40c24ff4L, "org.campagnelab.metar.R.structure.Sub"));
    // fill-in children: 

    return result;
  }
  public SNode visitVarargs(@NotNull VarargsContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "Varargs" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x501583ef40c24ff4L, "org.campagnelab.metar.R.structure.Sub"));
    // fill-in children: 

    return result;
  }
  public SNode visitEmptySub(@NotNull EmptySubContext context) {
    if (LOG.isDebugEnabled()) {
      LoggingRuntime.legacyLog(Level.DEBUG, "visiting " + "EmptySub" + " " + context.getText(), R2_ToMpsVisitor.class, null);
    }
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0xd45bf10872d81d4L, "org.campagnelab.metar.R.structure.EmptyExpr"));
    // fill-in children: 

    return result;
  }
  public static String trim(String value, String[] toTrimChoices) {
    for (String toTrim : toTrimChoices) {
      if (value.startsWith(toTrim) && value.endsWith(toTrim)) {
        value = value.substring(toTrim.length(), value.length());
        value = value.substring(0, value.length() - toTrim.length());
        return value;
      }
    }
    return value;
  }


  public static SNode mapOperator(String operatorName, int arity) {
    switch (Arrays.binarySearch(stringSwitchCases_zd22gc_a0a0vc, operatorName + ":" + arity)) {
      case 9:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4ce122073ce1119fL, "org.campagnelab.metar.R.structure.KroneckerProduct"));
      case 3:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4ce122073ce1008eL, "org.campagnelab.metar.R.structure.MatrixProduct"));
      case 8:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4ce122073ce10a1dL, "org.campagnelab.metar.R.structure.OuterProduct"));
      case 7:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x77757984810d36e4L, "org.campagnelab.metar.R.structure.InMatchOperator"));
      case 5:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4ce122073ce0f94fL, "org.campagnelab.metar.R.structure.IntegerDivide"));
      case 6:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4c36c37b426a7909L, "org.campagnelab.metar.R.structure.MagriteOperator"));
      case 4:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4c36c37b426cd86eL, "org.campagnelab.metar.R.structure.DplyrOperator"));
      case 20:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84bad3b4L, "org.campagnelab.metar.R.structure.Colon"));
      case 21:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894631L, "org.campagnelab.metar.R.structure.DoubleColon"));
      case 22:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894632L, "org.campagnelab.metar.R.structure.TripleColon"));
      case 34:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894633L, "org.campagnelab.metar.R.structure.BitwiseOr"));
      case 35:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894634L, "org.campagnelab.metar.R.structure.LogicalOr"));
      case 2:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894635L, "org.campagnelab.metar.R.structure.Dollar"));
      case 32:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894636L, "org.campagnelab.metar.R.structure.At"));
      case 15:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894637L, "org.campagnelab.metar.R.structure.Minus"));
      case 16:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894638L, "org.campagnelab.metar.R.structure.SubstractOperator"));
      case 13:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894639L, "org.campagnelab.metar.R.structure.Plus"));
      case 14:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e8489463aL, "org.campagnelab.metar.R.structure.AddOperator"));
      case 33:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e8489463bL, "org.campagnelab.metar.R.structure.Caret"));
      case 30:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e8489463cL, "org.campagnelab.metar.R.structure.GreaterThan"));
      case 31:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e8489463dL, "org.campagnelab.metar.R.structure.GreaterOrEqualThan"));
      case 25:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e8489463eL, "org.campagnelab.metar.R.structure.LessThan"));
      case 27:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e8489463fL, "org.campagnelab.metar.R.structure.LessOrEqualThan"));
      case 29:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894640L, "org.campagnelab.metar.R.structure.Equality"));
      case 1:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894641L, "org.campagnelab.metar.R.structure.Difference"));
      case 11:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894642L, "org.campagnelab.metar.R.structure.BitwiseAnd"));
      case 10:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894643L, "org.campagnelab.metar.R.structure.LogicalAnd"));
      case 24:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894644L, "org.campagnelab.metar.R.structure.SimpleAssignment"));
      case 26:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894645L, "org.campagnelab.metar.R.structure.ForcefulAssignment"));
      case 28:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894646L, "org.campagnelab.metar.R.structure.EqualAssignment"));
      case 17:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894647L, "org.campagnelab.metar.R.structure.AssignToTheRight"));
      case 18:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894648L, "org.campagnelab.metar.R.structure.ForcefulToTheRight"));
      case 23:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e84894649L, "org.campagnelab.metar.R.structure.ColonEqual"));
      case 36:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e8489464aL, "org.campagnelab.metar.R.structure.Tilde"));
      case 12:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e856b7603L, "org.campagnelab.metar.R.structure.Multiplication"));
      case 19:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e856b7604L, "org.campagnelab.metar.R.structure.Division"));
      case 0:
        return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x6c9855e866bcb3bL, "org.campagnelab.metar.R.structure.Not"));
      default:
        if (LOG.isInfoEnabled()) {
          LoggingRuntime.legacyLog(Level.INFO, "mapOperator returning null for name=" + operatorName + " arity:" + arity, R2_ToMpsVisitor.class, null);
        }
        return null;
    }
  }

  private static String[] stringSwitchCases_zd22gc_a0a0vc = new String[]{"!:1", "!=:2", "$:2", "%*%:2", "%.%:2", "%/%:2", "%>%:2", "%in%:2", "%o%:2", "%x%:2", "&&:2", "&:2", "*:2", "+:1", "+:2", "-:1", "-:2", "->:2", "->>:2", "/:2", "::2", ":::2", "::::2", ":=:2", "<-:2", "<:2", "<<-:2", "<=:2", "=:2", "==:2", ">:2", ">=:2", "@:2", "^:2", "|:2", "||:2", "~:2"};
}
